.\" _printf man page
.\" Man page for the custom _printf function
.\"
.TH _PRINTF 3 "Aug 18 2023" "0.1" "Library functions manual"
.SH NAME
_printf \- custom version for printf function
.SH SYNOPSIS
#include "main.h"
.PP
int _printf(const char *FORMAT, ...);
.SH DESCRIPTION
The \fB_printf\fP function sends formatted output to stdout. A custom \fB_printf()\fP function for learning purposes was developed by cohort #17 students Ephraim Wanongo  and Chizi Ichemati. \fB_printf()\fP function's format string is a character string, beginning and ending in its initial shift state, if any. These arguments are placed using the '%' operator.
.SH COMPILATION
.PP
.B gcc -Wall -Werror -Wextra -pedantic -Wno-format *.c
.PP
.B gcc -Wall -Werror -Wextra -pedantic -g -Wno-format *.c (for gdb debugging)
.SH PRINTING
.PP
\fBint _printf(const char *FORMAT, ...);\fP
.PP
\fBFORMAT\fP is the string that takes n specifiers followed by a '%' symbol. i.e., "Hello this is %s from %d cohort". '...' is the variadic argument (any type of variable).
.SH EXAMPLE
\fBInput\fP
.PP
\fB_printf\fP("Hello this is %s from %d cohort\\n", "Sharon and Lilian", 9);
.PP
\fBOutput\fP
.PP
Hello this is Sharon and Lilian from 9 cohort
.SH RETURN VALUE
Return value is the number of characters printed, excluding the null terminator.
.SH FLAG SPECIFIERS
.SH
Custom and non-custom specifier modifiers.
.SH THE LENGTH MODIFIERS
.SH
Length modifiers.
.SH THE CONVERSION SPECIFIERS
.SH
\fB%\fP - % symbol is set without argument and conversion specification has to be '%%'.
.PP
\fB%c\fP - integer or char argument converted to unsigned char.
.PP
\fB%d, %i\fP - int argument is converted to signed decimal integer.
.PP
\fB%s\fP - string argument. \fB_printf\fP handles 's' conversion specifier if the argument value is not a pointer to a literal string.
.PP
\fB%o, %u, %x, %X\fP - unsigned int argument converted to unsigned octal (o), unsigned decimal (u), unsigned hexadecimal notation (x) for lower case, and (X) for upper case.
.PP
\fB%b\fP - The unsigned int argument is converted to binary.
.PP
\fB%p\fP - The pointer is printed in hexadecimal format preceded by '0x'.
.PP
\fB%r, %R\fP - 'r' prints string in reverse. 'R' prints encrypted rot13.
.PP
\fB%S\fP - ASCII characters <32 and >127 in the argument string are converted to hexadecimal preceded by \x.
.SH AUTHORS
.SH
Ephraim Wanongo and Chizi Ichemati
.SH TWITTER
.PP
@_cortez_cruz @Chizi2Frank
